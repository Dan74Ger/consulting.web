@model IEnumerable<ConsultingGroup.Models.Attivita730>

@{
    var annoSelezionato = ViewData["AnnoSelezionato"] as int?;
    var annoFiscale = ViewData["AnnoFiscale"] as ConsultingGroup.Models.AnnoFiscale;
    var title = ViewData["Title"] as string ?? "Gestione Attivit√† 730";
}

<!-- Header con filtro anno -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-file-alt me-2 text-success"></i>@title
        </h2>
        <p class="text-muted mb-0">Gestione dichiarazioni Mod. 730</p>
    </div>
    
    <div class="d-flex gap-2 align-items-center">
        <!-- Pulsante Torna a Gestione Attivit√† -->
        <a href="@Url.Action("Index", "GestioneAttivita")" 
           class="btn btn-outline-secondary btn-sm">
            <i class="fas fa-arrow-left me-1"></i>Torna a Gestione Attivit√†
        </a>
        
        <!-- Link Gestione Clienti -->
        <a href="@Url.Action("Index", "Clienti")" 
           class="btn btn-outline-primary btn-sm">
            <i class="fas fa-users me-1"></i>Gestione Clienti
        </a>
        
        <!-- Filtro Anno -->
        @using (Html.BeginForm("Index", "Attivita730", FormMethod.Get, new { @class = "d-flex gap-2 align-items-center" }))
        {
            <label class="form-label mb-0 text-nowrap">Anno:</label>
            @Html.DropDownList("annoSelezionato", ViewData["AnniFiscali"] as SelectList, 
                new { @class = "form-select form-select-sm", @style = "width: 150px;", 
                @onchange = "this.form.submit();" })
        }
    </div>
</div>

<!-- Scadenza del 730 -->
@if (annoFiscale?.Scadenza730.HasValue == true)
{
    var scadenza = annoFiscale.Scadenza730.Value;
    var giorniRimanenti = (scadenza - DateTime.Today).Days;
    var alertClass = giorniRimanenti <= 30 ? "danger" : (giorniRimanenti <= 60 ? "warning" : "info");
    
    <div class="alert alert-@alertClass mb-4">
        <i class="fas fa-calendar-alt me-2"></i>
        <strong>Scadenza Mod. 730:</strong> @scadenza.ToString("dd/MM/yyyy")
        @if (giorniRimanenti > 0)
        {
            <span class="ms-2">(@giorniRimanenti giorni rimanenti)</span>
        }
        else if (giorniRimanenti == 0)
        {
            <span class="ms-2 fw-bold">(SCADE OGGI!)</span>
        }
        else
        {
            <span class="ms-2 fw-bold">(SCADUTO da @(-giorniRimanenti) giorni)</span>
        }
    </div>
}

<!-- Tabella Attivit√† - Modifica Inline -->
<div class="card">
    <div class="card-header bg-success text-white">
        <h5 class="mb-0">
            <i class="fas fa-list me-2"></i>Elenco Attivit√† 730 - @(annoFiscale?.AnnoDescrizione ?? $"Anno {annoSelezionato}")
        </h5>
    </div>
    <div class="card-body p-0">
        @if (Model.Any())
        {
            <!-- ‚úÖ COMPORTAMENTO CORRETTO:
                 ‚Ä¢ Attivando Mod730 in anagrafica ‚Üí Cliente appare automaticamente
                 ‚Ä¢ Disattivando Mod730 in anagrafica ‚Üí Cliente RIMANE visibile
                 ‚Ä¢ Cancellazione ‚Üí Solo manuale con tasto elimina (üóëÔ∏è) -->
            <form id="bulkUpdateForm" method="post" action="@Url.Action("BulkUpdate")">
                @Html.AntiForgeryToken()
                <input type="hidden" name="annoSelezionato" value="@annoSelezionato" />
                
                <!-- Filtri e Pulsanti -->
                <div class="mb-3">
                    <!-- Prima riga filtri -->
                    <div class="d-flex flex-wrap gap-3 align-items-center mb-2">
                        <div class="d-flex align-items-center gap-2">
                            <label for="filtroNomeCliente" class="form-label mb-0 fw-bold">Cliente:</label>
                            <input type="text" id="filtroNomeCliente" class="form-control form-control-sm" style="width: 180px;" placeholder="Cerca per nome...">
                        </div>
                        
                        <div class="d-flex align-items-center gap-2">
                            <label for="filtroProfessionista" class="form-label mb-0 fw-bold">Professionista:</label>
                            <select id="filtroProfessionista" class="form-select form-select-sm" style="width: auto;">
                                <option value="">Tutti</option>
                                @{
                                    var professionistiFiltro = ViewBag.Professionisti as IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>;
                                }
                                @if (professionistiFiltro != null)
                                {
                                    @foreach (var prof in professionistiFiltro)
                                    {
                                        <option value="@prof.Value">@prof.Text</option>
                                    }
                                }
                            </select>
                        </div>
                        
                        <div class="d-flex align-items-center gap-2">
                            <label for="filtroRaccoltaDocumenti" class="form-label mb-0 fw-bold">Raccolta Doc.:</label>
                            <select id="filtroRaccoltaDocumenti" class="form-select form-select-sm" style="width: auto;">
                                <option value="">Tutti</option>
                                <option value="da_richiedere">Da Richiedere</option>
                                <option value="richiesti">Richiesti</option>
                                <option value="ricevuti">Ricevuti</option>
                            </select>
                        </div>
                        
                        <div class="d-flex align-items-center gap-2">
                            <label for="filtroDrStatus" class="form-label mb-0 fw-bold">Stato DR:</label>
                            <select id="filtroDrStatus" class="form-select form-select-sm" style="width: auto;">
                                <option value="">Tutti</option>
                                <option value="inserita">Solo DR Inserita</option>
                                <option value="controllata">Solo DR Controllata</option>
                                <option value="spedita">Solo DR Spedita</option>
                                <option value="complete">Tutte Complete</option>
                                <option value="incomplete">Incomplete</option>
                            </select>
                        </div>
                        
                        <div class="d-flex align-items-center gap-2">
                            <label for="filtroAltriStati" class="form-label mb-0 fw-bold">Altri Stati:</label>
                            <select id="filtroAltriStati" class="form-select form-select-sm" style="width: auto;">
                                <option value="">Tutti</option>
                                <option value="ricevuta">Solo Ricevuta</option>
                                <option value="pec">Solo PEC</option>
                                <option value="firmata">Solo Firmata</option>
                                <option value="all_complete">Tutti Completi</option>
                                <option value="missing">Mancanti</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Seconda riga con pulsanti di azione -->
                    <div class="d-flex flex-wrap justify-content-between align-items-center mt-2 gap-2">
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-outline-primary btn-sm" onclick="filterTable()">
                                <i class="fas fa-filter me-1"></i>Applica Filtri
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="resetFilters()">
                                <i class="fas fa-times me-1"></i>Reset
                            </button>
                        </div>
                        
                        <div class="d-flex flex-wrap gap-2">
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="fas fa-save me-1"></i>Salva Tutto
                            </button>
                            <a href="@Url.Action("ExportExcel", new { anno = annoSelezionato })" class="btn btn-warning btn-sm">
                                <i class="fas fa-file-excel me-1"></i>Export Excel
                            </a>
                            <button type="button" class="btn btn-danger btn-sm" onclick="confermaEliminazioneAnno()">
                                <i class="fas fa-trash-alt me-1"></i>Elimina tutti gli inserimenti dell'anno
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Tabella con intestazioni fisse -->
                <div class="table-container" style="max-height: 70vh; overflow-y: auto; border: 1px solid #dee2e6; border-radius: 0.375rem;">
                    <table class="table table-striped table-hover mb-0">
                        <thead class="table-dark sticky-top">
                            <tr>
                                <th style="width: 180px;">Cliente</th>
                                <th style="width: 150px;">Professionista</th>
                                <th style="width: 120px;">Codice DR</th>
                                <th style="width: 130px;">Raccolta Doc.</th>
                                <th style="width: 130px;" class="text-center">DR Inserita</th>
                                <th style="width: 130px;" class="text-center">DR Controllata</th>
                                <th style="width: 130px;" class="text-center">DR Spedita</th>
                                <th style="width: 140px;" class="text-center">Altri Stati</th>
                                <th style="width: 200px;">Note</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int index = 0;}
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <input type="hidden" name="[@index].IdAttivita730" value="@item.IdAttivita730" />
                                    <input type="hidden" name="[@index].IdAnno" value="@item.IdAnno" />
                                    <input type="hidden" name="[@index].IdCliente" value="@item.IdCliente" />
                                    <input type="hidden" name="[@index].CreatedAt" value="@item.CreatedAt.ToString("yyyy-MM-ddTHH:mm:ss")" />
                                    
                                    <!-- Cliente -->
                                    <td class="align-middle" style="width: 180px;">
                                        <div>
                                            <strong>@item.Cliente?.NomeCliente</strong><br/>
                                            <small class="text-muted">@item.Cliente?.CodiceAteco</small>
                                        </div>
                                    </td>
                                    
                                    <!-- Professionista -->
                                    <td class="align-middle" style="width: 150px;">
                                        <select name="[@index].IdProfessionista" class="form-select form-select-sm">
                                            <option value="">-- Nessuno --</option>
                                            @{
                                                var professionisti = ViewBag.Professionisti as IEnumerable<SelectListItem>;
                                            }
                                            @if (professionisti != null)
                                            {
                                                @foreach (var prof in professionisti)
                                                {
                                                    @if (prof.Value == item.IdProfessionista?.ToString())
                                                    {
                                                        <option value="@prof.Value" selected>@prof.Text</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@prof.Value">@prof.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </td>
                                    
                                    <!-- Codice DR -->
                                    <td class="align-middle" style="width: 120px;">
                                        <input type="text" name="[@index].CodiceDr" value="@item.CodiceDr" 
                                               class="form-control form-control-sm" placeholder="DR123456" />
                                    </td>
                                    
                                    <!-- Raccolta Documenti -->
                                    <td class="align-middle" style="width: 130px;">
                                        <select name="[@index].RaccoltaDocumenti" class="form-select form-select-sm">
                                            @if (item.RaccoltaDocumenti == "da_richiedere")
                                            {
                                                <option value="da_richiedere" selected>Da Richiedere</option>
                                            }
                                            else
                                            {
                                                <option value="da_richiedere">Da Richiedere</option>
                                            }
                                            @if (item.RaccoltaDocumenti == "richiesti")
                                            {
                                                <option value="richiesti" selected>Richiesti</option>
                                            }
                                            else
                                            {
                                                <option value="richiesti">Richiesti</option>
                                            }
                                            @if (item.RaccoltaDocumenti == "ricevuti")
                                            {
                                                <option value="ricevuti" selected>Ricevuti</option>
                                            }
                                            else
                                            {
                                                <option value="ricevuti">Ricevuti</option>
                                            }
                                        </select>
                                    </td>
                                    
                                    <!-- DR Inserita -->
                                    <td class="text-center align-middle" style="width: 130px;">
                                        <div class="d-flex flex-column align-items-center gap-1">
                                            @if (item.DrInserita)
                                            {
                                                <input type="checkbox" name="[@index].DrInserita" value="true" checked class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" name="[@index].DrInserita" value="true" class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                            }
                                            <input type="hidden" name="[@index].DrInserita" value="false" />
                                            <input type="date" name="[@index].DrInseritaData" value="@(item.DrInseritaData?.ToString("yyyy-MM-dd"))" class="form-control form-control-sm" style="font-size: 0.8rem;" />
                                        </div>
                                    </td>
                                    
                                    <!-- DR Controllata -->
                                    <td class="text-center align-middle" style="width: 130px;">
                                        <div class="d-flex flex-column align-items-center gap-1">
                                            @if (item.DrControllata)
                                            {
                                                <input type="checkbox" name="[@index].DrControllata" value="true" checked class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" name="[@index].DrControllata" value="true" class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                            }
                                            <input type="hidden" name="[@index].DrControllata" value="false" />
                                            <input type="date" name="[@index].DrControllataData" value="@(item.DrControllataData?.ToString("yyyy-MM-dd"))" class="form-control form-control-sm" style="font-size: 0.8rem;" />
                                        </div>
                                    </td>
                                    
                                    <!-- DR Spedita -->
                                    <td class="text-center align-middle" style="width: 130px;">
                                        <div class="d-flex flex-column align-items-center gap-1">
                                            @if (item.DrSpedita)
                                            {
                                                <input type="checkbox" name="[@index].DrSpedita" value="true" checked class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" name="[@index].DrSpedita" value="true" class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                            }
                                            <input type="hidden" name="[@index].DrSpedita" value="false" />
                                            <input type="date" name="[@index].DrSpeditaData" value="@(item.DrSpeditaData?.ToString("yyyy-MM-dd"))" class="form-control form-control-sm" style="font-size: 0.8rem;" />
                                        </div>
                                    </td>
                                    
                                    <!-- Altri Stati -->
                                    <td class="text-center align-middle" style="width: 140px;">
                                        <div class="d-flex flex-column gap-1">
                                            <div class="form-check form-check-inline d-flex align-items-center justify-content-start gap-1">
                                                @if (item.RicevutaDr730)
                                                {
                                                    <input type="checkbox" name="[@index].RicevutaDr730" value="true" checked class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="[@index].RicevutaDr730" value="true" class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                                }
                                                <input type="hidden" name="[@index].RicevutaDr730" value="false" />
                                                <label class="form-check-label fw-bold text-dark" style="font-size: 0.75rem;">Ricevuta</label>
                                            </div>
                                            <div class="form-check form-check-inline d-flex align-items-center justify-content-start gap-1">
                                                @if (item.PecInvioDr)
                                                {
                                                    <input type="checkbox" name="[@index].PecInvioDr" value="true" checked class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="[@index].PecInvioDr" value="true" class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                                }
                                                <input type="hidden" name="[@index].PecInvioDr" value="false" />
                                                <label class="form-check-label fw-bold text-danger" style="font-size: 0.75rem;">PEC</label>
                                            </div>
                                            <div class="form-check form-check-inline d-flex align-items-center justify-content-start gap-1">
                                                @if (item.DrFirmata)
                                                {
                                                    <input type="checkbox" name="[@index].DrFirmata" value="true" checked class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="[@index].DrFirmata" value="true" class="form-check-input" style="accent-color: black; border: 2px solid black;" />
                                                }
                                                <input type="hidden" name="[@index].DrFirmata" value="false" />
                                                <label class="form-check-label fw-bold text-primary" style="font-size: 0.75rem;">Firmata</label>
                                            </div>
                                        </div>
                                    </td>
                                    
                                    <!-- Note -->
                                    <td class="align-middle" style="width: 200px;">
                                        <textarea name="[@index].Note" class="form-control form-control-sm" rows="3" placeholder="Note...">@item.Note</textarea>
                                    </td>
                                </tr>
                                index++;
                            }
                        </tbody>
                    </table>
                </div>
                

            </form>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-file-alt text-muted" style="font-size: 3rem;"></i>
                <h4 class="text-muted mt-3">Nessuna attivit√† 730 trovata</h4>
                <p class="text-muted">
                    @if (annoFiscale != null)
                    {
                        @:Non ci sono clienti con il servizio Mod. 730 attivo per l'anno @annoFiscale.Anno
                    }
                    else
                    {
                        @:Seleziona un anno fiscale valido per visualizzare le attivit√†.
                    }
                </p>

            </div>
        }
    </div>
</div>

<!-- Script semplificato per gestione tabella -->
<script>

// Funzione globale per eliminazione (deve essere fuori dal document.ready)
function confermaEliminazioneAnno() {
    console.log("Funzione confermaEliminazioneAnno chiamata");
    const anno = @annoSelezionato;
    const totalRows = $('tbody tr').length;
    console.log(`Anno: ${anno}, Righe: ${totalRows}`);
    
    // Prima conferma
    if (!confirm(`‚ö†Ô∏è ATTENZIONE!\n\nStai per eliminare TUTTI i ${totalRows} inserimenti del modello redditi dell'anno ${anno}.\n\nQuesta operazione √® IRREVERSIBILE!\n\nVuoi continuare?`)) {
        return;
    }
    
    // Seconda conferma con richiesta di digitare ELIMINA
    const confermaParola = prompt(`üö® ULTIMA CONFERMA!\n\nPer eliminare DEFINITIVAMENTE tutti i ${totalRows} inserimenti Mod. 730 dell'anno ${anno},\n\nScrivi esattamente: ELIMINA\n\ne poi premi OK:`);
    
    if (confermaParola !== "ELIMINA") {
        alert("‚ùå Operazione annullata!\n\nDevi scrivere esattamente 'ELIMINA' per confermare.");
        return;
    }
    
    // Esegui eliminazione
    eliminaTuttiInserimenti(anno);
}

function eliminaTuttiInserimenti(anno) {
    // Mostra loading
    const $button = $('button[onclick="confermaEliminazioneAnno()"]');
    const originalText = $button.html();
    $button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Eliminazione...');
    
    $.ajax({
        url: '@Url.Action("DeleteAllForYear", "Attivita730")',
        type: 'POST',
        data: {
            anno: anno,
            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
        },
        success: function(result) {
            if (result.success) {
                alert(`‚úÖ Successo!\n\nEliminati ${result.deletedCount} inserimenti dell'anno ${anno}.`);
                // Ricarica la pagina per aggiornare la tabella
                window.location.reload();
            } else {
                alert(`‚ùå Errore!\n\n${result.message}`);
                $button.prop('disabled', false).html(originalText);
            }
        },
        error: function() {
            alert('‚ùå Errore di comunicazione con il server!');
            $button.prop('disabled', false).html(originalText);
        }
    });
}

// Funzioni globali per i filtri (devono essere fuori dal document.ready)
function filterTable() {
    console.log("Funzione filterTable chiamata");
    const nomeClienteFilter = $('#filtroNomeCliente').val().toLowerCase();
    const professionistaFilter = $('#filtroProfessionista').val();
    const raccoltaFilter = $('#filtroRaccoltaDocumenti').val();
    const drFilter = $('#filtroDrStatus').val();
    const altriStatiFilter = $('#filtroAltriStati').val();
    console.log(`Filtri: Cliente=${nomeClienteFilter}, Professionista=${professionistaFilter}, Raccolta=${raccoltaFilter}, DR=${drFilter}, AltriStati=${altriStatiFilter}`);
    
    $('tbody tr').each(function() {
        let showRow = true;
        const $row = $(this);
        
        // Filtro Nome Cliente
        if (nomeClienteFilter) {
            const nomeCliente = $row.find('td:first strong').text().toLowerCase();
            if (!nomeCliente.includes(nomeClienteFilter)) {
                showRow = false;
            }
        }
        
        // Filtro Professionista
        if (professionistaFilter && showRow) {
            const professionistaValue = $row.find('select[name$=".IdProfessionista"]').val();
            if (professionistaValue !== professionistaFilter) {
                showRow = false;
            }
        }
        
        // Filtro Raccolta Documenti
        if (raccoltaFilter) {
            const raccoltaValue = $row.find('select[name$=".RaccoltaDocumenti"]').val();
            if (raccoltaValue !== raccoltaFilter) {
                showRow = false;
            }
        }
        
        // Filtro Stato DR
        if (drFilter && showRow) {
            const drInserita = $row.find('input[name$=".DrInserita"][type="checkbox"]').is(':checked');
            const drControllata = $row.find('input[name$=".DrControllata"][type="checkbox"]').is(':checked');
            const drSpedita = $row.find('input[name$=".DrSpedita"][type="checkbox"]').is(':checked');
            console.log(`Riga ${$row.index()}: DR Inserita=${drInserita}, Controllata=${drControllata}, Spedita=${drSpedita}`);
            
            switch(drFilter) {
                case 'inserita':
                    if (!drInserita) showRow = false;
                    break;
                case 'controllata':
                    if (!drControllata) showRow = false;
                    break;
                case 'spedita':
                    if (!drSpedita) showRow = false;
                    break;
                case 'complete':
                    if (!(drInserita && drControllata && drSpedita)) showRow = false;
                    break;
                case 'incomplete':
                    if (drInserita && drControllata && drSpedita) showRow = false;
                    break;
            }
        }
        
        // Filtro Altri Stati
        if (altriStatiFilter && showRow) {
            const ricevuta = $row.find('input[name$=".RicevutaDr730"][type="checkbox"]').is(':checked');
            const pec = $row.find('input[name$=".PecInvioDr"][type="checkbox"]').is(':checked');
            const firmata = $row.find('input[name$=".DrFirmata"][type="checkbox"]').is(':checked');
            
            switch(altriStatiFilter) {
                case 'ricevuta':
                    if (!ricevuta) showRow = false;
                    break;
                case 'pec':
                    if (!pec) showRow = false;
                    break;
                case 'firmata':
                    if (!firmata) showRow = false;
                    break;
                case 'all_complete':
                    if (!(ricevuta && pec && firmata)) showRow = false;
                    break;
                case 'missing':
                    if (ricevuta && pec && firmata) showRow = false;
                    break;
            }
        }
        
        if (showRow) {
            $row.show();
        } else {
            $row.hide();
        }
    });
    
    // Aggiorna contatore righe visibili
    updateRowCount();
}

function updateRowCount() {
    const totalRows = $('tbody tr').length;
    const visibleRows = $('tbody tr:visible').length;
    
    // Crea o aggiorna il contatore se non esiste
    if ($('#rowCounter').length === 0) {
        $('.card-header h5').append(' <span id="rowCounter" class="badge bg-light text-dark ms-2"></span>');
    }
    
    $('#rowCounter').text(`${visibleRows} di ${totalRows}`);
}

function resetFilters() {
    $('#filtroNomeCliente').val('');
    $('#filtroProfessionista').val('');
    $('#filtroRaccoltaDocumenti').val('');
    $('#filtroDrStatus').val('');
    $('#filtroAltriStati').val('');
    filterTable();
}

$(document).ready(function() {
    // Tooltip
    $('[title]').tooltip();
    
    // Filtro ricerca in tempo reale per nome cliente
    $('#filtroNomeCliente').on('input', function() {
        filterTable();
    });
    
    // Auto-imposta data quando si spunta checkbox
    $('.stato-checkbox').change(function() {
        if ($(this).is(':checked')) {
            const target = $(this).data('target');
            const dateInput = $('#' + target);
            if (!dateInput.val()) {
                dateInput.val(new Date().toISOString().slice(0, 10));
            }
        }
    });
    
    // Aggiorna colori in base allo stato quando si cambiano i valori
    $('select[name$=".RaccoltaDocumenti"]').change(function() {
        const value = $(this).val();
        $(this).removeClass('border-success bg-light border-warning bg-warning bg-opacity-10 border-secondary');
        
        switch(value) {
            case 'ricevuti':
                $(this).addClass('border-success bg-light');
                break;
            case 'richiesti':
                $(this).addClass('border-warning bg-warning bg-opacity-10');
                break;
            default:
                $(this).addClass('border-secondary');
                break;
        }
    });
    
    // Event listeners per i filtri
    $('#filtroRaccoltaDocumenti, #filtroDrStatus, #filtroAltriStati').change(filterTable);
    
    // Inizializza contatore
    updateRowCount();
    
    // Auto-refresh scadenza ogni 30 secondi
    @if (annoFiscale?.Scadenza730.HasValue == true)
    {
        @:setInterval(function() {
        @:    // Aggiorna solo la sezione scadenza senza ricaricare tutta la pagina
        @:    const now = new Date();
        @:    // Implementa logica di aggiornamento countdown se necessario
        @:}, 30000);
    }
});
</script>
